# .github/workflows/compiler-support.yml

name: 'Check supported Compilers'

on:
  workflow_dispatch:
    inputs:
      use_arm:
        description: 'Use ARM64 runners'
        required: true
        type: boolean
        default: false

jobs:
  gcc-build:
    name: ${{ matrix.id }} ${{ inputs.use_arm && 'ARM' || 'x86_64' }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - id: gcc-12
            base_image: gcc:12-bookworm
          - id: gcc-15
            base_image: gcc:15-bookworm

    runs-on: ubuntu-24.04{{ inputs.use_arm && '-arm' || '' }}

    steps:
      - name: 'Checkout repository code'
        uses: actions/checkout@v4

      - name: 'Build Project with ${{ matrix.id }}'
        run: |
          docker build \
            --build-arg BASE_IMAGE=${{ matrix.base_image }} \
            -t minifi-${{ matrix.id }} \
            -f docker/compiler-test/gcc.Dockerfile \
            .

  clang-build:
    name: ${{ matrix.id }} ${{ inputs.use_arm && 'ARM' || 'x86_64' }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - id: clang-16
            base_image: silkeh/clang:16-bookworm
          - id: clang-20
            base_image: silkeh/clang:20-bookworm

    runs-on: ubuntu-24.04{{ inputs.use_arm && '-arm' || '' }}

    steps:
      - name: 'Checkout repository code'
        uses: actions/checkout@v4

      - name: 'Build Project with ${{ matrix.id }}'
        run: |
          docker build \
            --build-arg BASE_IMAGE=${{ matrix.base_image }} \
            -t minifi-${{ matrix.id }} \
            -f docker/compiler-test/clang.Dockerfile \
            .